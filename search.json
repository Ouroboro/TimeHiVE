[{"path":"https://github.com/Ouroboro/TimeHiVE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vladimiro Andrea Boselli. Author, maintainer, copyright holder. Paolo Tagliolato Acquaviva d'Aragona. Author. Alessandro Oggioni. Author.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vladimiro Andrea Boselli, Paolo Tagliolato, Alessandro Oggioni. (2025). Time-series Hierarchical Visual Explorer (v0.1.0). Zenodo. https://doi.org/10.5281/zenodo.15697261","code":"@Misc{,   title = {Time-series Hierarchical Visual Explorer},   author = {Vladimiro Andrea Boselli and Paolo Tagliolato and Alessandro Oggioni},   year = {2025},   note = {R package version v0.1.0}, }"},{"path":[]},{"path":"https://github.com/Ouroboro/TimeHiVE/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Time-series Hierarchical Visual Explorer","text":"TimeHiVE provides efficient R functions hierarchical moving-window analysis coupled time series data. toolkit implements: Parallel computation Pearson Mann-Kendall correlations Optimized O(n log n) implementations statistical tests Customizable visualization time-dependent relationships Statistical significance testing adjustable thresholds software package proposed allows perform analyses time series avoiding arbitrary choice time window allowing appreciate whole spectrum possible results offered kind statistical tools. Figure 1: Different Moving Average vs Original Syntetic Time Series. Color scale y-axis meant match colors Fig. 2 Figure 2: Representation possible moving averages Original Syntetic Time Series, moving averages analyses represented Fig. 1 highlighted comments results. Figure 3: Representation two Time Series positively correlated short periods negatively correlated long periods. series built : TS1 = 40 + 2*sin(t/2) - t/20 - rand(-2/3, 2/3) TS2 = 15 + 2*sin(t/2) + t/7 - rand(-2/3, 2/3). sine component creates short-term positive correlation, t/n terms drive long-term negative correlation. Figure 4: show Moving Correlation Analysis coupled Time Series represented Fig. 4, first row shows results Pearson’s correlation coefficient (Top Left) relative p-values (Top Right), second row shows analysis MK’s correlation coefficients (Bottom Left) relative p-values (Bottom Right). inversion correlation short long period analysis quite clear. FIRST ROW: Pearson’s correlation coefficient (Top Left) relative p-values (Top Right). SECOND ROW: analysis MK’s correlation coefficientes (Bottom Left) relative p-values (Bottom Right). inversion correlation short long period analysis quite clear.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Time-series Hierarchical Visual Explorer","text":"can install development version GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"Ouroboro/TimeHiVE\")"},{"path":[]},{"path":"https://github.com/Ouroboro/TimeHiVE/index.html","id":"basic-example","dir":"","previous_headings":"Usage","what":"Basic Example","title":"Time-series Hierarchical Visual Explorer","text":"","code":"library(TimeHiVE)  # Generate example data set.seed(123) series1 <- sin(seq(0, 4*pi, length.out = 200)) + rnorm(200, sd = 0.2) series2 <- cos(seq(0, 4*pi, length.out = 200)) + rnorm(200, sd = 0.3)  # Perform analysis results <- TH_coupled(   series1 = series1,   series2 = series2,   m = 2,   s = 6,   alpha = 0.05,   mode = \"both\" )  # Visualize results TH_plotc(results, mask = TRUE, mode = \"both\")"},{"path":"https://github.com/Ouroboro/TimeHiVE/index.html","id":"advanced-usage","dir":"","previous_headings":"Usage","what":"Advanced Usage","title":"Time-series Hierarchical Visual Explorer","text":"functions TH_plots TH_plotc, can use significance values mask output statistical tests depending value chose previously. Output Fig. 5 unmasked. Output Fig. 6 masked. moving-window statistical analyses proposed previous functions sufficient, functions TH_tweak() TH_plott() allow use custom functions possibly customize color scales tile intervals display phase. exhaustive example follows shortly. Output Fig. 7 single series tweak. Output Fig. 8 coupled series tweak.","code":"results2 <- TH_coupled(series1, series2)  Fig5 <- \"Fig5.png\" Fig6 <- \"Fig6.png\" p <- TH_plotc(results2, output_file = Fig5) p <- TH_plotc(results2, output_file = Fig6, mask = TRUE) ### START Customized Functions ###  harmean_fun <- function(series) {   series <- series[!is.na(series)]   n <- length(series)   sol <- n / sum(1/series, na.rm = TRUE)   return(sol) }  mean_fun <- function(x) mean(x)  diffmean_fun <- function(series) {   series <- series[!is.na(series)]   x <- harmean_fun(series)   y <- mean_fun(series)   sol <- x-y   return(sol) }  skew_fun <- function(series) {   series <- series[!is.na(series)]   n <- length(series)   avg <- mean(series)   sd_camp <- sd(series)   sol <- sum((series - avg)^3 / (sd_camp^3)) / n   return(sol) }  ### END Customized Functions ###  results <- TH_tweak(   harmean_fun,   mean_fun,   diffmean_fun,   skew_fun,   series = list(data),   param = 0.05 )  ### START Customized Color Palette ###  skew = {   neg <- colorRampPalette(c(\"green4\", \"green\"))(33)   pos <- colorRampPalette(c(\"magenta\", \"magenta4\"))(33)   c(neg, \"white\", pos) }  ### END Customized Color Palette ###  Fig7 <- \"Fig7.png\" p <- TH_plott(results, output_file = Fig7,               colorscales = list(                 \"avg\",                 \"avg\",                 c(\"magenta\", \"purple\", \"blue\", \"cyan\", \"white\"),                 skew),               colorlimits = list(                 c(0, 35),                 c(0, 35),                 NULL,                 NULL)) ### START Customized Functions ###  pearson_fun <- function(x, y) cor.test(x, y, method = \"pearson\")$estimate  diffmax_fun <- function(serie1, serie2, na.rm = TRUE) {   max1 <- sum(serie1, na.rm = na.rm)   max2 <- sum(serie2, na.rm = na.rm)   sol <- (max1-max2)   return(sol) }  sqrmean_fun <- function(serie1, serie2, na.rm = TRUE) {   x <- sum(serie1, na.rm = na.rm)   y <- sum(serie2, na.rm = na.rm)   sol <- sqrt(sqrt((x*y)^4))   return(sol) }  ### END Customized Functions ###  results <- TH_tweak(   pearson_fun,   diffmax_fun,   sqrmean_fun,   series = list(sdata, sdata2),   param = 0.05 )  Fig8 <- \"Fig8.png\" p <- TH_plott(results, output_file = Fig8, colorscales = list(c(\"blue\", \"white\", \"red\"),                    c(\"green\", \"yellow\", \"purple\"),                    \"avg\"))"},{"path":"https://github.com/Ouroboro/TimeHiVE/index.html","id":"main-functions","dir":"","previous_headings":"Usage","what":"Main Functions","title":"Time-series Hierarchical Visual Explorer","text":"TH_single(): Perform hierarchical moving-window analysis single series TH_coupled(): Perform hierarchical moving-window analysis coupled series TH_tweak(): Perform customized hierarchical moving-window analysis coupled single series TH_plots(): Visualize analysis results TH_single() TH_plotc(): Visualize analysis results TH_coupled() TH_plott(): Visualize analysis results TH_tweak(), masking. TH_MK_Trend(): Mann-Kendall trend test TH_MK_Corr(): Mann-Kendall correlation test","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Time-series Hierarchical Visual Explorer","text":"detailed documentation see:","code":"?TH_single ?TH_coupled ?TH_tweak ?TH_plots ?TH_plotc ?TH_plott ?TH_MK_Trend ?TH_MK_Corr"},{"path":"https://github.com/Ouroboro/TimeHiVE/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Time-series Hierarchical Visual Explorer","text":"Contributions welcome! Please follow steps: Fork repository Create feature branch (git checkout -b feature/-feature) Commit changes (git commit -'Add feature') Push branch (git push origin feature/-feature) Open Pull Request","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Time-series Hierarchical Visual Explorer","text":"package licensed GNU General Public License v3.0 (GPL-3.0). See LICENSE file details.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Time-series Hierarchical Visual Explorer","text":"questions issues, please contact: Vladimiro Andrea Boselli Email: boselli.v@irea.cnr.GitHub: @Ouroboro","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Mann-Kendall Tau Test with Knight's Algorithm — TH_MK_Corr","title":"Mann-Kendall Tau Test with Knight's Algorithm — TH_MK_Corr","text":"Efficient implementation Mann-Kendall test correlation using Knight's algorithm (O(n log n) complexity). Handles ties correctly.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mann-Kendall Tau Test with Knight's Algorithm — TH_MK_Corr","text":"","code":"TH_MK_Corr(x, y, alternative = c(\"two.sided\", \"greater\", \"less\"))"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mann-Kendall Tau Test with Knight's Algorithm — TH_MK_Corr","text":"x numerical vector y numerical vector alternative Type alternative hypothesis (\"two.sided\", \"greater\", \"less\")","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mann-Kendall Tau Test with Knight's Algorithm — TH_MK_Corr","text":"htest object results statistic Kendall's tau-b statistic p.value p-value alternative Alternative hypothesis description","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Corr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mann-Kendall Tau Test with Knight's Algorithm — TH_MK_Corr","text":"Vladimiro Andrea Boselli, (2025) boselli.v@irea.cnr.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mann-Kendall Tau Test with Knight's Algorithm — TH_MK_Corr","text":"","code":"if (FALSE) { # \\dontrun{ kt <- TH_MK_Corr(sub_series1, sub_series2, alternative = \"less\") c(kt$statistic, kt$p.value) } # }"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Mann-Kendall Trend Test with Knight's Algorithm — TH_MK_Trend","title":"Mann-Kendall Trend Test with Knight's Algorithm — TH_MK_Trend","text":"Efficient implementation Mann-Kendall test trend detection using merge sort algorithm (O(n log^2 n) complexity).","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mann-Kendall Trend Test with Knight's Algorithm — TH_MK_Trend","text":"","code":"TH_MK_Trend(data_series)"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mann-Kendall Trend Test with Knight's Algorithm — TH_MK_Trend","text":"`data_series` numerical vector containing NA missing values.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mann-Kendall Trend Test with Knight's Algorithm — TH_MK_Trend","text":"list components: S Mann-Kendall S statistic Var.S Variance S Z Z-score p.value Two-sided p-value","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Trend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mann-Kendall Trend Test with Knight's Algorithm — TH_MK_Trend","text":"Vladimiro Andrea Boselli, (2025) boselli.v@irea.cnr.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_MK_Trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mann-Kendall Trend Test with Knight's Algorithm — TH_MK_Trend","text":"","code":"if (FALSE) { # \\dontrun{ data <- c(1.2, 3.4, 2.5, 4.1, 5.6) result <- TH_MK_Trend(data) } # }"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_coupled.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform hierarchical moving-window statistical analysis for time series. — TH_coupled","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_coupled","text":"Perform hierarchical moving-window statistical analysis coupled time series. returns analysis moving correlations using Pearson's correlation coefficient Mann-Kendall correlation coefficient. results data.frame passed TH_plotc() function.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_coupled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_coupled","text":"","code":"TH_coupled(   series1,   series2,   m = NULL,   s = NULL,   alpha = 0.1,   mode = \"all\",   alternative = c(\"two.sided\", \"greater\", \"less\") )"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_coupled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_coupled","text":"alternative Optional, \"two.sided\" (Default), \"greater\", \"less\". `series1` numerical vector containing NA missing values. `series2` numerical vector containing NA missing values. must length series1. `m` numeric positive integer, subsampling parameter. Optional (default: autocalculated). `s` numeric positive integer, cutoff parameters subseries legth. Optional (default: autocalculated). `mode` character string specifying computation mode. One : \"\", \"pearson\", \"kendall\", \"\", \"pearson_with_p\", \"kendall_with_p\". `alpha` numeric significance level flagging (default: 0.1).","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_coupled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_coupled","text":"result data.frame pass TH_plotc() attributes.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_coupled.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_coupled","text":"Vladimiro Andrea Boselli, (2025) boselli.v@irea.cnr.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_coupled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_coupled","text":"","code":"if (FALSE) { # \\dontrun{ output <- TH_coupled(   series1 = rnorm(200),   series2 = rnorm(200),   m = 2,   s = 6,   alpha = 0.05,   mode = \"pearson_with_p\",   alternative = \"less\" ) } # }"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plotc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot hierarchical moving-window statistical analysis for time series. — TH_plotc","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plotc","text":"Plots hierarchical moving-window statistical analysis coupled time series. returns analysis moving correlations using Pearson's correlation coefficient Mann-Kendall's correlation coefficient. input data.frame created TH_coupled() function.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plotc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plotc","text":"","code":"TH_plotc(results, scale = NULL, output_file = NULL, mask = FALSE, mode = NULL)"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plotc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plotc","text":"`results` data.frame created TH_coupled(). `scale` numeric, scaling factor point sizes, autoset default. `output_file` string, optional, filename save plot (NULL skip saving). `mask` logical value. TRUE, shows significance main plots hides p-value plots modes without explicit p-value requests. applicable modes: \"\", \"kendall_with_p\", \"pearson_with_p\". modes, warning issued mask ignored. `mode` character string specifying plots show: \"\", \"pearson\", \"kendall\", \"\", \"pearson_with_p\", \"kendall_with_p\".","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plotc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plotc","text":"gridExtra arranged plot object.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plotc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plotc","text":"Vladimiro Andrea Boselli, (2025) boselli.v@irea.cnr.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plotc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plotc","text":"","code":"if (FALSE) { # \\dontrun{ results <- TH_coupled(series1, series2, 4, 6) TH_plotc(results, mask = TRUE, mode = \"both\") TH_plotc(results, mode = \"pearson_with_p\") } # }"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot hierarchical moving-window statistical analysis for time series. — TH_plots","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plots","text":"Plots hierarchical moving-window statistical analysis single time series. returns analysis moving average running trends. input data.frame created TH_single() function.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plots","text":"","code":"TH_plots(results, scale = NULL, output_file = NULL, mask = FALSE, mode = NULL)"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plots","text":"`result` data.frame created TH_single(). `scale` numeric, scaling factor point sizes, autoset default. `output_file` string, optional, filename save plot (NULL skip saving), NULL default. `mask` logical value. TRUE, enhances main plots using point shapes indicate statistical significance (available). applicable modes: \"\", \"trend_with_test\", \"avg_with_test\". modes, warning issued mask ignored. `mode` character string specifying computation mode. One : \"\", \"avg_only\", \"trend_only\", \"avg_trend\", \"trend_with_test\", \"avg_with_test\". default takes mode passed attribute results.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plots","text":"ggplot gridExtra arranged plot object.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plots.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plots","text":"Vladimiro Andrea Boselli, (2025) boselli.v@irea.cnr.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plots","text":"","code":"if (FALSE) { # \\dontrun{ results <- TH_single(series, 4, 6) TH_plots(results) TH_plots(results, output_file = output_file, mask = TRUE, mode = \"avg_with_test\") } # }"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plott.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot hierarchical moving-window statistical analysis for time series. — TH_plott","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plott","text":"Plots hierarchical moving-window statistical analysis custom functions. input data.frame created TH_tweak() function.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plott.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plott","text":"","code":"TH_plott(   results,   scale = NULL,   output_file = NULL,   colorscales = NULL,   colorlimits = NULL )"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plott.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plott","text":"`results` data.frame created TH_tweak(). `scale` numeric, scaling factor point sizes, autoset default. `output_file` string, optional, filename save plot (NULL skip saving). `colorscales` list color scales function (optional). Can mix predefined names (\"avg\", \"trend\", \"pval\") custom color vectors. `colorlimits` list numeric vectors specifying color limits function (optional). element vector length 2 (c(min, max)). NULL, limits calculated automatically.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plott.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plott","text":"gridExtra arranged plot object.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plott.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plott","text":"Vladimiro Andrea Boselli, (2025) boselli.v@irea.cnr.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_plott.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot hierarchical moving-window statistical analysis for time series. — TH_plott","text":"","code":"if (FALSE) { # \\dontrun{ results <- TH_tweak(fun1, fun2, fun3, series1, series2) TH_plott(results) TH_plott(results, colorscales = list(c(\"blue\", \"white\", \"red\"), \"avg\", \"trend\")) } # }"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform hierarchical moving-window statistical analysis for time series. — TH_single","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_single","text":"Perform hierarchical moving-window statistical analysis single time series. returns analysis moving average running trends. results data.frame passed TH_plots() function.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_single","text":"","code":"TH_single(series, m = NULL, s = NULL, mode = \"all\", alpha = 0.1)"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_single","text":"`series` numerical vector containing NA missing values. `m` numeric positive integer, sub-sampling parameter. Optional (default: auto-calculated). `s` numeric positive integer, cutoff parameters sub-series length. Optional (default: auto-calculated). `mode` character string specifying computation mode. One : \"\" (default), \"avg_only\", \"trend_only\", \"avg_trend\", \"trend_with_test\", \"avg_with_test\". `alpha` numeric significance level t-test flag (default: 0.1).","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_single","text":"result data.frame pass TH_plots(), s, m length series passed silent attributes.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_single.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_single","text":"Vladimiro Andrea Boselli, (2025) boselli.v@irea.cnr.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_single","text":"","code":"if (FALSE) { # \\dontrun{ output <- TH_single(   series = rnorm(200),   m = 2,   s = 6,   mode = \"avg_with_test\",   alpha = 0.05 ) } # }"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_tweak.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform hierarchical moving-window statistical analysis for time series. — TH_tweak","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_tweak","text":"Perform hierarchical moving-window statistical analysis using custom functions. returns analysis results data.frame passed TH_plott() function.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_tweak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_tweak","text":"","code":"TH_tweak(..., series, m = NULL, s = NULL, param = 0.1)"},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_tweak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_tweak","text":"... User-defined functions analysis series list numerical vectors single numerical vector m numeric positive integer, subsampling parameter. Optional (default: autocalculated). s numeric positive integer, cutoff parameters subseries length. Optional (default: autocalculated). param numeric significance level flagging (default: 0.1).","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_tweak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_tweak","text":"result data.frame pass TH_plott() attributes.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_tweak.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_tweak","text":"Vladimiro Andrea Boselli, (2025) boselli.v@irea.cnr.","code":""},{"path":"https://github.com/Ouroboro/TimeHiVE/reference/TH_tweak.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform hierarchical moving-window statistical analysis for time series. — TH_tweak","text":"","code":"if (FALSE) { # \\dontrun{ output <- TH_tweak(   function(x, y) cor.test(x, y, method = \"pearson\")$estimate,   function(x, y) cor.test(x, y, method = \"kendall\")$estimate,   series = list(serie1, serie2) ) } # }"}]
